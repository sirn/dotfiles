## Traffic normalization
##

scrub in all


## Translation
{% for spec in pf_forwarded_ports|default([], true) %}

# {{spec.name}}
{% if spec.inet %}
rdr pass on {{pf_ext_if}} inet proto {{spec.proto}} from any to {{pf_ext_if}} port {{spec.port}} -> {{private_ipv4}} port {{spec.dest_port}}
{% endif %}
{% if spec.inet6 %}
rdr pass on {{pf_ext_if}} inet6 proto {{spec.proto}} from any to {{pf_ext_if}} port {{spec.port}} -> {{private_ipv6}} port {{spec.dest_port}}
{% endif %}
{% endfor %}
{% for spec in pf_nat|default([], true) %}

# {{spec.name}}
nat on {{pf_ext_if}} from {{spec.network}} to any -> ({{pf_ext_if}})
{% endfor %}


## Queueing
##


## Package filtering
##

block in all

# Allow IPv4 traffic
icmp_types="{ echoreq }"
pass in on {{pf_ext_if}} inet proto icmp all icmp-type $icmp_types keep state
pass in on lo0 inet all
pass out inet all flags any keep state

# Allow IPv6 traffic
icmp6_types="{ 128, 133, 134, 135, 136, 137 }"
pass in on {{pf_ext_if}} inet6 proto icmp6 all icmp6-type $icmp6_types keep state
pass in on lo0 inet6 all
pass out inet6 all flags any keep state

{% for spec in pf_allowed_ports|default([], true) %}
# {{spec.name}}
pass in on {{pf_ext_if}} inet proto {{spec.proto}} from any to any port {{spec.port}} keep state
pass in on {{pf_ext_if}} inet6 proto {{spec.proto}} from any to any port {{spec.port}} keep state

{% endfor %}
# Local filter anchor
anchor "pflocal/*"
anchor "pfifnet/*"
load anchor "pflocal/pfconf" from "/usr/local/etc/pf.conf"
