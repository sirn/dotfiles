#!/usr/bin/env bash
#
# ~/.bashrc
#

#
# Aliases
#

alias ls="ls -G"
alias ll="ls -lh"
alias la="ls -alh"
alias ka="k -hA"
alias kk="k -h"

if hash nvim 2>/dev/null; then
    alias nvi="nvim"
    alias vi="nvim"
    alias vim="nvim"
fi

if hash hub 2>/dev/null; then
    alias git="hub"
fi

if hash emacsclient 2>/dev/null; then
    export EDITOR="emacsclient -c -a ''"
    alias emacs="emacsclient -c -a ''"
    alias crontab="env EDITOR=vi crontab"
fi


#
# GPG
#

if hash gpg-connect-agent 2>/dev/null; then
    gpg-connect-agent updatestartuptty /bye >/dev/null
fi


#
# Prompt command hooks
#

_window_update_title() {
    printf "\e]0;%s\a" "$(pwd)"

    if [[ "$TERM_PROGRAM" == "Apple_Terminal" ]]; then
        printf '\e]7;file://%s%s\a' "$HOSTNAME" "${PWD// /%20}"
    fi
}

case "$TERM" in
    xterm* | rxvt* | screen* )
        PROMPT_COMMAND='
        _window_update_title
        ' # end-quote
        ;;

    * )
        ;;
esac


#
# Prompt
#

_prompt_abbrev_path() {
    local _ps
    _ps="\w"
    printf "%s" "${_ps@P}"| sed 's/\([^[:punct:]]\)[^\/]*\//\1\//g'
}

_prompt_git() {
    local _branch
    local _changed
    local _staged

    _branch="$(\git rev-parse --abbrev-ref HEAD 2>/dev/null)"

    if [[ -n "$_branch" ]]; then
        while read -r p; do
            case "${p:0:1}" in
                1 )
                    [[ "${p:2:1}" == "M" ]] && _staged=1
                    [[ "${p:3:1}" == "M" ]] && _changed=1
                    ;;

                * )
                    _changed=1
                    ;;
            esac
        done < <(\git status --porcelain=v2 2>/dev/null)

        printf "%s" "$_branch"
        [[ $_staged == 1 ]]  && printf "\\033[0;32m*"
        [[ $_changed == 1 ]] && printf "\\033[0;33m*"
        printf "\\033[0;0m "
    fi
}

case "$TERM" in
    xterm* | rxvt* )
        export PS1='\h $(_prompt_abbrev_path) $(_prompt_git)\$ '
        ;;

    screen* )
        export PS1='$(_prompt_abbrev_path) $(_prompt_git)\$ '
        ;;

    * )
        export PS1='\$ '
        ;;
esac
