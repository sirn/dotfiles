#!/bin/sh
#
# Collection of commands to perform Emacs maintenance tasks.
#

# shellcheck disable=SC2034
BASE_DIR=$(
    cd "$(dirname "$0")/.." || exit
    pwd -P
)
BASE_NAME=$(basename "$0")

## Utils
##

EMACSCLIENT_SOCK=

_detect_emacsclient_sock() {
    if [ -n "$EMACSCLIENT_SOCK" ]; then
        return
    fi

    EMACSCLIENT_SOCK=$(command emacsclient -e 'server-socket-dir' | tr -d '"')/server
}

_maybe_emacsc() {
    if [ -S "$EMACSCLIENT_SOCK" ]; then
        command emacsclient "$@"
        exit $?
    fi

    command emacs \
        -nw \
        --batch \
        --load "$BASE_DIR/etc/emacs/init.el" \
        "$@"
}

## Recompile
##

_do_recompile() {
    find "$BASE_DIR/etc/emacs" -iname '*.elc' -delete
    _maybe_emacsc --eval '(byte-recompile-directory "'"$BASE_DIR"'/etc/emacs/packages" 0)'
}

## Command: kill
## Kill Emacs daemon

_do_kill() {
    _detect_emacsclient_sock

    if [ -S "$EMACSCLIENT_SOCK" ]; then
        command emacsclient --eval '(kill-emacs)'
        exit $?
    fi

    printf >&2 "%s: kill is only available in daemon mode\\n" "$BASE_NAME"
}

## Running
##

cmd=$(printf "%s" "$1" | tr -C '[:alnum:]' '_')

if [ -z "$cmd" ]; then
    printf >&2 "Usage: %s COMMAND

A wrapper script to perform emacs maintenance tasks. If an emacs daemon
exists, this command will run commands via emacsclient instead of
standalone emacs.

COMMAND:

    kill                kill emacs daemon
    recompile           recompile elisp in ~/.dotfiles/etc/emacs

" "$BASE_NAME"
    exit 2
fi

if [ "$(command -v "_do_${cmd}")x" = "x" ]; then
    printf >&2 "%s: unknown command %s\\n" "$(basename "$0")" "$cmd"
    exit 1
fi

shift
"_do_${cmd}" "$@"
exit $?
