#!/bin/sh
#
# Wrapper for running nix flake update within home-manager.
#

# shellcheck disable=SC2034
BASE_DIR=$(
    cd "$(dirname "$0")/.." || exit
    pwd -P
)

## Colors
##

c_bold=$(tput bold 2>/dev/null || true)
c_red=$(tput setaf 1 2>/dev/null || true)
c_orange=$(tput setaf 3 2>/dev/null || true)
c_blue=$(tput setaf 4 2>/dev/null || true)
c_reset=$(tput sgr0 2>/dev/null || true)

printe_h1() {
    printf >&2 "%s[%s]%s %s%s%s\\n" \
        "$c_blue" "${0##*/}" "$c_reset" \
        "$c_orange$c_bold" "$@" "$c_reset"
}

printe_info() {
    printf >&2 "%s[%s]%s %s%s%s\\n" \
        "$c_blue" "${0##*/}" "$c_reset" \
        "$@"
}

printe_err() {
    printf >&2 "%s[%s]%s %s%s%s\\n" \
        "$c_blue" "${0##*/}" "$c_reset" \
        "$c_red" "$@" "$c_reset"
}

run_cmd() {
    printf >&2 "%s[%s]%s %s%s%s %s\\n" \
        "$c_blue" "${0##*/}" "$c_reset" \
        "$c_bold" "Command:" "$c_reset" "$*"
    "$@"
}

## Wrapping
##

nix() {
    command nix \
        --extra-experimental-features nix-command \
        --extra-experimental-features flakes \
        "$@"
}

## Subroutine
##

main() {
    if ! command -v nix >/dev/null; then
        printe_err "nix is not installed?"
        exit 1
    fi

    printe_h1 "Running nix-flake"

    cd "$BASE_DIR" || exit 1
    run_cmd nix flake update --commit-lock-file "$@"
}

main "$@"
