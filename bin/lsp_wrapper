#!/bin/sh
#
# A script to run $0 in Vagrant or Docker.
#

CONFIG_FILE=.lspconfig
PROG_NAME=$(basename "$0")

export CONF_USE
export CONF_PROJECT_ROOT
export CONF_CMD

print_err() {
    printf >&2 "%s\\n" "$*"
}

## Vagrant
##

run_vagrant() {
    exec vagrant ssh -c "[ -f ~/.profile ] && . ~/.profile; \
cd $CONF_PROJECT_ROOT || exit 1; \
exec $CONF_CMD $*\
" # END-COMMAND
}

## Docker
##

run_docker() {
    docker_image=$(getvar "DOCKER_${PROG_NAME}_IMAGE")
    docker_shell=$(getvar "DOCKER_${PROG_NAME}_SHELL" "/bin/sh")

    if [ -z "$docker_image" ]; then
        print_err "${PROG_NAME} requires DOCKER_${PROG_NAME}_IMAGE to be set"
        exit 1
    fi

    set -- \
        --rm \
        --init \
        "$docker_image" \
        "$docker_shell" -c "\
exec $CONF_CMD $*\
" # END-COMMAND

    set -- -v "$PROJECT_ROOT:$PROJECT_ROOT" "$@"
    docker_mounts=$(getvar "DOCKER_${PROG_NAME}_MOUNTS")
    for mount_name in $docker_mounts; do
        mount=$(getvar "DOCKER_${PROG_NAME}_MOUNTS_${mount_name}")
        if [ -z "$mount" ]; then
            continue
        fi

        set -- -v "$mount" "$@"
    done

    docker_name=$(getvar "DOCKER_${PROG_NAME}_NAME")
    if [ -n "$docker_name" ]; then
        set -- --name "$docker_name" "$@"
    fi

    exec docker run "$@"
}

## Exec
##

run_exec() {
    set -- $CONF_CMD "$@"
    exec "$@"
}

## Main
##

getvar() {
    if [ $# -lt 1 ]; then
        print_err "getvar() must have at least 1 argument"
        return 2
    fi

    name=$1
    shift
    default=$1

    if [ -f "$PROJECT_ROOT"/"$CONFIG_FILE" ]; then
        val=$(grep "^$name=" "$PROJECT_ROOT"/"$CONFIG_FILE")
        val=${val#*=}
    fi

    if [ -z "$val" ]; then
        echo "$default"
    fi

    echo "$val"
}

detect_project_root() {
    pwd_dir=$(pwd -P)
    cur_dir=$pwd_dir

    while true; do
        [ "$cur_dir" = "$HOME" ] && break
        [ "$cur_dir" = "/" ] && break

        if [ -f "$cur_dir"/.lspconfig ]; then
            echo "$cur_dir"
            return
        fi

        cur_dir=$(
            cd "$cur_dir"/.. || exit 1
            pwd -P
        )
    done

    echo "$pwd_dir"
}

clean_path() {
    old_path=$1

    wrapper_path=$(dirname "$0")
    new_path=

    OLDIFS=$IFS
    IFS=:

    for n in $old_path; do
        if [ -z "$n" ]; then
            continue
        fi

        if [ "$n" = "$wrapper_path" ]; then
            continue
        fi

        new_path="${new_path:+$new_path:}$n"
    done

    IFS=$OLDIFS
    unset OLDIFS

    echo "$new_path"
}

main() {
    if [ "$PROG_NAME" = "lsp_wrapper" ]; then
        if [ $# -gt 0 ]; then
            PROG_NAME=$1
            shift
        else
            print_err "Usage: $PROG_NAME [program] [args...]"
            exit 2
        fi
    fi

    PATH=$(clean_path "$PATH")
    PROJECT_ROOT=$(detect_project_root)

    CONF_USE=$(getvar "USE" "exec")
    CONF_PROJECT_ROOT=$(getvar "PROJECT_ROOT" "$PROJECT_ROOT")
    CONF_CMD=$(getvar "CMD_${PROG_NAME}" "${PROG_NAME}")

    case "$CONF_USE" in
    vagrant)
        run_vagrant "$@"
        ;;

    docker)
        run_docker "$@"
        ;;

    *)
        run_exec "$@"
        ;;
    esac
}

main "$@"
