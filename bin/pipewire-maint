#!/bin/sh
#
# Collection of commands to perform Pipewire maintenance tasks.
#

## Utils
##

_sink_exists() {
    pactl list sinks | grep -q "Name: $1$"
}

## Run
##

_do_normalize() {
    pactl unload-module module-ladspa-sink >/dev/null 2>&1 || true

    if ! _sink_exists ladspa-sc4; then
        pactl load-module module-ladspa-sink \
              sink_name=ladspa-sc4 \
              master="$(pactl get-default-sink)" \
              plugin=sc4_1882 \
              label=sc4 \
              control=1,1.5,401,-12,20,5,12
    fi

    if ! _sink_exists ladspa-normalized; then
        pactl load-module module-ladspa-sink \
              sink_name=ladspa-normalized \
              master=ladspa-sc4 \
              plugin=fast_lookahead_limiter_1913 \
              label=fastLookaheadLimiter \
              control=10,-20,0.8
    fi

    pactl set-default-sink ladspa-normalized
}

main() {
    cmd=$(printf "%s" "$1" | tr -C '[:alnum:]' '_')

    if [ -z "$cmd" ]; then
        printf >&2 "Usage: %s COMMAND

A wrapper script to perform pipewire maintenance tasks.

COMMAND:

    normalize           Create a sink for normalizing audio output.
                        Switch to the intended output before running
                        this command.

" "$BASE_NAME"
        exit 2
    fi

    if [ "$(command -v "_do_${cmd}")x" = "x" ]; then
        printf >&2 "%s: unknown command %s\\n" "$(basename "$0")" "$cmd"
        exit 1
    fi

    shift
    "_do_${cmd}" "$@"
    exit $?
}

main "$@"
