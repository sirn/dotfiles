#!/bin/sh
#
# Proxy command to run xbps-src under Docker in ethereal mode.
#

CURDIR=$(pwd -P)

print_help() {
    printf >&2 "Usage: %s [xbps-src commands]

Proxy command to run xbps-src under Docker in ethereal mode.
This command must be run inside xbps-src directory.

" "$(basename "$0")"
}

if [ ! -f "$CURDIR/xbps-src" ]; then
    print_help
    exit 1
fi

ARCH=${ARCH:-$(xbps-uhelper -C /dev/null arch)}
DOCKER_BASE=$(grep DOCKER_BASE < .travis.yml | cut -d= -f2)
TAG=$(grep TAG < .travis.yml | cut -d= -f2)

if [ -z "$DOCKER_BASE" ] && [ -z "$TAG" ]; then
    printf >&2 "%s: could not determine DOCKER_BASE and TAG from .travis.yml
" "$(basename "$0")"
    exit 1
fi

if [ -f "$CURDIR/masterdir" ]; then
    mv "$CURDIR/masterdir" "$CURDIR/masterdir.host"
fi

restore_masterdir() {
    if [ -L "$CURDIR/masterdir" ]; then
        rm "$CURDIR/masterdir"
    fi

    if [ -f "$CURDIR/masterdir.host" ]; then
        mv "$CURDIR/masterdir.host" "$CURDIR/masterdir"
    fi
}

trap 'restore_masterdir' 0 1 2 3 6 14 15

DOCKER_CMD=docker

if command -v podman >/dev/null; then
    DOCKER_CMD=podman
fi

if ! command -v "$DOCKER_CMD" >/dev/null; then
    printf >&2 "%s: docker or podman not installed?
" "$(basename "$0")"
    exit 1
fi

$DOCKER_CMD run \
     --rm -it \
     -e XBPS_CHROOT_CMD=ethereal \
     -e XBPS_ALLOW_CHROOT_BREAKOUT=yes \
     -v "$CURDIR":/hostrepo \
     -v /tmp:/tmp \
     docker.io/"$DOCKER_BASE"-"$ARCH":"$TAG" \
     bash -c "ln -sf / /hostrepo/masterdir && /hostrepo/xbps-src $*"
