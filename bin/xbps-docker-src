#!/bin/sh
#
# Proxy command to run xbps-src under Docker in ethereal mode.
#

CURDIR=$(pwd -P)
PROG=$(basename "$0")

print_help() {
    echo >&2 "Usage: $PROG [xbps-src commands]

Proxy command to run xbps-src under Docker in ethereal mode.
This command must be run inside xbps-src directory.
"
}

if [ ! -f "$CURDIR/xbps-src" ] || [ $# -lt 1 ]; then
    print_help
    exit 1
fi

# XBPS_CHROOT_CMD=ethereal requires running in a container since
# it is destructive; so let's fail right away if docker or podman
# is not installed
#

if command -v docker >/dev/null; then
    DOCKER_CMD=docker
fi

if command -v podman >/dev/null; then
    DOCKER_CMD=podman
fi

if [ -z "$DOCKER_CMD" ]; then
    echo >&2 "$PROG: docker or podman not installed?"
    exit 1
fi

# Emulates what xbps-src is doing in its travis script, but since this
# is a working machine we default BOOTSTRAP and ARCH to currently running
# arch.
#

BOOTSTRAP=${BOOTSTRAP:-$(xbps-uhelper -C /dev/null arch)}
ARCH=${ARCH:-$BOOTSTRAP}
DOCKER_BASE=$(grep DOCKER_BASE < .travis.yml | cut -d= -f2)
TAG=$(grep TAG < .travis.yml | cut -d= -f2)

if [ -z "$DOCKER_BASE" ] && [ -z "$TAG" ]; then
    echo >&2 "$PROG: could not determine Docker image"
    exit 1
fi

# If we ever run ./xbps-src locally and masterdir is already created
# on disk, let's move it away so we could create a link in a mount.
#
# While we're at it, let's also create temp dir for futher usage.
#

TEMPDIR=$(mktemp -d)

if [ -d "$CURDIR/masterdir.host" ]; then
    echo >&2 "$PROG: another $PROG is running?"
    exit 1
fi

if [ -d "$CURDIR/masterdir" ]; then
    mv "$CURDIR/masterdir" "$CURDIR/masterdir.host"
fi

cleanup_dirs() {
    if [ -L "$CURDIR/masterdir" ]; then
        rm "$CURDIR/masterdir"
    fi

    if [ -d "$CURDIR/masterdir.host" ]; then
        mv "$CURDIR/masterdir.host" "$CURDIR/masterdir"
    fi

    if [ -n "$TEMPDIR" ] && [ -d "$TEMPDIR" ]; then
        rm -rf -- "$TEMPDIR"
    fi
}

trap 'cleanup_dirs' 0 1 2 3 6 14 15

# Bind links into actual directory, if any.
#

MOUNTS=

find "$CURDIR" -type l \
     ! \( -path "*/srcpkgs*" \
      -or -path "*/masterdir*" \
     \) > "$TEMPDIR"/links

if command -v readlink >/dev/null; then
    while read -r link; do
        actual=$(readlink -f "$link")
        case "$actual" in
            $CURDIR/* ) ;;

            * )
                dest=/hostrepo/${link##$CURDIR/}
                mount_flag="-v $actual:$dest"
                MOUNTS=${mount_flag:+$mount_flag }$MOUNTS
                ;;
        esac
    done < "$TEMPDIR"/links
fi

# Building XBPS_ARGS to be pass to Docker. We default setting -a to
# $ARCH (which defaults to $BOOTSTRAP) to mimic Travis build script.
#

case "$*" in
    *-a* ) ;;
    * )
        if [ "$ARCH" != "$BOOTSTRAP" ]; then
            XBPS_ARGS="-a $ARCH"
        fi
        ;;
esac

# shellcheck disable=SC2086
$DOCKER_CMD run \
     --rm -i \
     -e XBPS_CHROOT_CMD=ethereal \
     -e XBPS_ALLOW_CHROOT_BREAKOUT=yes \
     -v "$CURDIR":/hostrepo \
     -v /tmp:/tmp \
     $MOUNTS \
     docker.io/"$DOCKER_BASE"-"$BOOTSTRAP":"$TAG" \
     bash <<-EOF
ln -sf / /hostrepo/masterdir
/hostrepo/xbps-src $XBPS_ARGS $*
EOF
