#!/bin/sh
#
# Convenient script for snapshotting the current boot environment
# as a bootable clone suitable for use with zfsbootmenu.
#
# The assumption of this script is:
#
# 1. You have a master bootfs, for example as zroot/ROOT/boot, where
#    it is the canonical bootfs.
#
# 2. You make a bootable clone before updating the system.
#
# 3. You continue to use master bootfs unless you wish to revert
#    the previous configuration, in which you will select the older
#    version from zfsbootmenu.
#

if [ "$(id -u)" != "0" ]; then
    echo >&2 "Must be run as root."
    exit 1
fi

# Prepare environments
#
ARCH=$(xbps-uhelper -C /dev/null arch)
DATE=$(date +%Y%m%d)
REV=1
ZFS_BOOTFS=
ZFS_RPOOL=
ZFS_ROOTFS=

# Find the current bootfs defined in cmdline; we cannot use bootfs
# since zfsbootmenu can also boot even when bootfs is not defined
# in zpool.
#
# shellcheck disable=SC2046
set -- $(cat /proc/cmdline)

for _cmd in "$@"; do
    case "$_cmd" in
        root=zfs:* )
            ZFS_BOOTFS=${_cmd#root=zfs:}
            ZFS_ROOTFS=${ZFS_BOOTFS##*/}
            ZFS_RPOOL=${ZFS_BOOTFS%%/$ZFS_ROOTFS}
            continue
            ;;
    esac
done

if [ -z "$ZFS_BOOTFS" ] || [ -z "$ZFS_RPOOL" ] || [ -z "$ZFS_ROOTFS" ]; then
    exit
fi

# Try determining the target clone name in the format of current date with
# revision append to it to make it possible to have multiple boot env of
# the same kernel version, e.g. in case of recompiling kernel.
#
ZFS_ROOTFS_NEW=

while [ -z "$ZFS_ROOTFS_NEW" ]; do
    _rootfs_new=${ARCH}-${DATE}_${REV}
    if ! zfs list -H "$ZFS_RPOOL"/"$_rootfs_new" >/dev/null 2>&1; then
        ZFS_ROOTFS_NEW=$_rootfs_new
        continue
    fi
    REV=$((REV+1))
done

if [ -z "$ZFS_ROOTFS_NEW" ]; then
    exit
fi

# Create a new boot environment based on newly kernel by performing:
# 1. Snapshot the current bootfs as RPOOL/ROOTFS@new_version
# 2. Clone the snapshot as RPOOL/ROOTFS_NEW
# 3. Destroy the snapshot RPOOL/ROOTFS@new_version
#
zfs snapshot "$ZFS_BOOTFS"@bootenv_"${DATE}_${REV}"
zfs clone \
     -o canmount=noauto \
     -o mountpoint=/ \
     "$ZFS_BOOTFS"@bootenv_"${DATE}_${REV}" \
     "$ZFS_RPOOL"/"$ZFS_ROOTFS_NEW"
