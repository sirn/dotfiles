#!/usr/bin/env ksh
#
# ~/.kshrc
#

# Exit early for non-interactive shell
#
case "$-" in
    *i* )
        ;;

    * )
        return 0
        ;;
esac


## History
##

HISTFILE="$HOME/.ksh_history"
HISTSIZE=10000

export HISTFILE
export HISTSIZE


## Platform
##

unset PLATFORM
unset OSID

PLATFORM=$(uname | tr '[:upper:]' '[:lower:]')

if [ -f /etc/os-release ]; then
    OSID=$(awk '/^ID=/ {
        match($0, "^.*=\"?([^\"]+)\"?$", a);
        print a[1]
    }' < /etc/os-release)
fi


## Aliases
##

if command -v colorls >/dev/null; then
    alias ls="colorls -G"
elif ls --version 2>&1 |grep -qe "BusyBox" -e "GNU"; then
    alias ls="ls --color"
elif ls -G >/dev/null 2>&1 ; then
    alias ls="ls -G"
fi

alias ll='ls -lh'
alias la='ls -alh'
alias sshi='ssh -F /dev/null -o UserKnownHostsFile=/dev/null'

case "$OSID" in
    void )
        alias xlocal="xbps-query -p repository -s $HOME"
        ;;

    * )
        ;;
esac


## GPG
##

if command -v gpg-connect-agent >/dev/null; then
    GPG_TTY=$(tty)
    export GPG_TTY

    gpg-connect-agent updatestartuptty /bye >/dev/null
fi


## PATHs
##

prependpath() {
    case ":$PATH:" in
        *:"$1":*)
            ;;

        * )
            PATH="${1:+$1:}$PATH"
            ;;
    esac
}

GOPATH=$HOME/Dev/go/gopath:$HOME/Dev
RUST_SRC_PATH="$HOME/.local/lib/rustlib/src/rust/src"

export GOPATH
export MANPATH
export RUST_SRC_PATH

prependpath "$HOME/.local/bin"
prependpath "$HOME/.cabal/bin"
prependpath "$HOME/.cargo/bin"
prependpath "$HOME/.local/lib/google-cloud-sdk/bin"
prependpath "$HOME/.local/lib/pytools/bin"

_gopaths=$GOPATH

while true; do
    if [ -z "$_gopaths" ]; then
        break
    fi

    _gopath=${_gopaths%%:*}
    prependpath "$_gopath/bin"

    _gopaths=${_gopaths##$_gopath}
    _gopaths=${_gopaths#:}
done

unset _gopath
unset _gopaths

case "$(uname | tr '[:upper:]' '[:lower:]')" in
    darwin )
        prependpath /opt/local/bin

        if [ -f /usr/libexec/java_home ]; then
            JAVA_HOME=$(/usr/libexec/java_home)
            export JAVA_HOME
        fi

        for _pypath in "$HOME"/Library/Python/?.?/bin; do
            if [ -d "$_pypath" ]; then
                prependpath "$_pypath"
            fi
        done

        unset _pypath
        ;;
esac


## Local
##

if [ -d "$HOME/.cache/rebar3/bin" ]; then
    prependpath "$HOME/.cache/rebar3/bin"
fi

for rbpath in "$HOME"/.gem/ruby/?.?/bin; do
    if [ -d "$rbpath" ]; then
        prependpath "$rbpath"
    fi
done



## Prompt
##

case "$TERM" in
    xterm* | rxvt* ) PS1="\h \w \$ ";;
    screen* ) PS1="\w \$ ";;
    * ) PS1="\$ ";;
esac

export PS1
unset PLATFORM
unset OSID
unset prependpath
