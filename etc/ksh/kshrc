#!/usr/bin/env ksh
#
# ~/.kshrc
#

# Exit early for non-interactive shell
#
case "$-" in
    *i* )
        ;;

    * )
        return 0
        ;;
esac


## History
##

HISTFILE="$HOME/.ksh_history"
HISTSIZE=10000

export HISTFILE
export HISTSIZE


## Platform
##

unset PLATFORM
unset OSID

PLATFORM=$(uname | tr '[:upper:]' '[:lower:]')

if [ -f /etc/os-release ]; then
    OSID=$(grep ^ID /etc/os-release | sed -E "s|.*=\"?([^\"]+)\"?|\1|")
fi


## GPG
##

if command -v gpg-connect-agent >/dev/null; then
    GPG_TTY=$(tty)
    export GPG_TTY

    gpg-connect-agent updatestartuptty /bye >/dev/null
fi


## PATHs
##

prependpath() {
    case ":$PATH:" in
        *:"$1":*)
            ;;

        * )
            PATH="${1:+$1:}$PATH"
            ;;
    esac
}

GOPATH=$HOME/Dev/go/gopath:$HOME/Dev
RUST_SRC_PATH="$HOME/.local/lib/rustlib/src/rust/src"

export GOPATH
export MANPATH
export RUST_SRC_PATH

prependpath "$HOME/.local/bin"
prependpath "$HOME/.cabal/bin"
prependpath "$HOME/.cargo/bin"
prependpath "$HOME/.local/lib/google-cloud-sdk/bin"
prependpath "$HOME/.local/lib/pytools/bin"

_gopaths=$GOPATH

while true; do
    if [ -z "$_gopaths" ]; then
        break
    fi

    _gopath=${_gopaths%%:*}
    prependpath "$_gopath/bin"

    _gopaths=${_gopaths##$_gopath}
    _gopaths=${_gopaths#:}
done

unset _gopath
unset _gopaths

case "$(uname | tr '[:upper:]' '[:lower:]')" in
    darwin )
        prependpath /opt/local/bin

        if [ -f /usr/libexec/java_home ]; then
            JAVA_HOME=$(/usr/libexec/java_home)
            export JAVA_HOME
        fi

        for _pypath in "$HOME"/Library/Python/?.?/bin; do
            if [ -d "$_pypath" ]; then
                prependpath "$_pypath"
            fi
        done

        unset _pypath
        ;;
esac


## Local
##

if [ -d "$HOME/.cache/rebar3/bin" ]; then
    prependpath "$HOME/.cache/rebar3/bin"
fi

for rbpath in "$HOME"/.gem/ruby/?.?/bin; do
    if [ -d "$rbpath" ]; then
        prependpath "$rbpath"
    fi
done


## Prompt
##

case "$TERM" in
    xterm* | rxvt* ) PS1="\h \w \$ ";;
    screen* ) PS1="\w \$ ";;
    * ) PS1="\$ ";;
esac

export PS1


## Utilities
##

if command -v colorls >/dev/null; then
    alias ls="command colorls -G"
elif command ls --version 2>&1 |grep -qe "BusyBox" -e "GNU"; then
    alias ls="command ls --color"
elif command ls -G >/dev/null 2>&1; then
    alias ls="command ls -G"
fi

alias ll='ls -lh'
alias la='ls -alh'


# gg - jump to directory

gg() {
    typeset lscmd
    typeset dir

    if command -v colorls >/dev/null; then
        lscmd="command colorls -G -p"
    elif command ls --version 2>&1 |grep -qe "BusyBox" -e "GNU"; then
        lscmd="command ls --color -p"
    elif command ls -G >/dev/null 2>&1; then
        lscmd="command ls -Gp"
    fi

    dir=$(
        find "$HOME/Dev/src" -type d \( -name .git -o -name .hg \) -prune |
            sort -u |
            awk '
                BEGIN { prev="" }
                {
                    # prevent subrepo from appearing in the list
                    r=match($1, "/\\.[a-zA-Z0-9]+$")
                    l=length($1)
                    cur=substr($1, 1, l-(l-r+1))
                    if (prev == "" || index(cur, prev) == 0) {
                        print cur
                        prev=cur
                    }
                }' |
            fzf --preview "$lscmd {}" -q "$*")

    if [ -z "$dir" ]; then
        return
    fi

    builtin cd "$dir"
}

# cd - with interactive menu

cd() {
    if [[ "$#" != 0 ]]; then
        builtin cd "$@";
        return
    fi

    typeset lscmd
    typeset dir

    if command -v colorls >/dev/null; then
        lscmd="command colorls -G -p"
    elif command ls --version 2>&1 |grep -qe "BusyBox" -e "GNU"; then
        lscmd="command ls --color -p"
    elif command ls -G >/dev/null 2>&1; then
        lscmd="command ls -Gp"
    fi

    while true; do
        dir=$(command ls -a -p |
                  grep '/$' |
                  sed 's;/$;;' |
                  fzf --tac --preview "$lscmd {}")

        if [ -z "$dir" ]; then
            return
        fi

        builtin cd "$dir"
    done
}


## Cleanups
##

unset PLATFORM
unset OSID
unset prependpath
