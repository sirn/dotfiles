#!/bin/sh
#
# ~/.profile
#

export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export EDITOR=vi

export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.data
export XDG_STATE_HOME=$HOME/.state

PATH=/sbin:/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
PATH=$HOME/.local/bin:$PATH


#
# Language runtime
#

# Erlang
PATH=$HOME/.cache/rebar3/bin:$PATH

# Golang
export GOPATH=$HOME/Dev/go/
PATH=$HOME/Dev/go/bin:$PATH

# Node
PATH=$HOME/.local/var/npm/bin:$PATH

# Rust
PATH=$HOME/.cargo/bin:$PATH
if hash rustc 2>/dev/null; then
    RUST_SRC_PATH="$(rustc --print sysroot)/lib/rustlib/src/rust/src"
    export RUST_SRC_PATH
fi


#
# Platform-specific
#

case "$(uname)" in
    Darwin )
        PATH=/usr/local/opt/gpg-agent/bin:$PATH
        PATH=/usr/local/opt/node@8/bin:$PATH

        if hash brew 2>/dev/null; then
            export HOMEBREW_NO_ANALYTICS=1
            export HOMEBREW_NO_AUTO_UPDATE=1
            export OPENSSL_INCLUDE_DIR=/usr/local/opt/libressl/include
            export OPENSSL_LIB_DIR=/usr/local/opt/libressl/lib
            export PATH=/usr/local/opt/libressl/bin:$PATH
        fi

        if [ -f /usr/libexec/java_home ]; then
            JAVA_HOME=$(/usr/libexec/java_home)
            export JAVA_HOME
        fi

        if [ -d /Applications/mpv.app/Contents/MacOS ]; then
            PATH=/Applications/mpv.app/Contents/MacOS:$PATH
        fi

        if [ -d "/Applications/VMware Fusion.app" ]; then
            export VAGRANT_VMWARE_CLONE_DIRECTORY="$HOME/Virtual Machines"
        fi
        ;;
esac


#
# GPG agent
#

if hash gpgconf 2>/dev/null; then
    unset SSH_AGENT_PID

    if [ "${gnupg_SSH_AUTH_SOCK_by:-0}" -ne $$ ]; then
        SSH_AUTH_SOCK="$(gpgconf --list-dirs agent-ssh-socket)"
        export SSH_AUTH_SOCK
    fi

    GPG_TTY=$(tty)
    export GPG_TTY
fi


#
# Finalizing
#

export PATH
